[versions]

atomicfu = "0.23.1"
coreKtx = "1.12.0"
geoCompose = "0.6.0"
jlayer = "1.0.2"
kotlin = "1.9.21"
agp = "8.2.0"
compose = "1.5.11"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.8.2"
compose-uitooling = "1.5.4"
#libres = "1.2.1"
media3Exoplayer = "1.2.0"
multiplatformSettings = "1.1.1"
vlcj = "4.7.3"
voyager = "1.0.0-rc10"
composeImageLoader = "1.7.1"
napier = "2.6.1"
buildConfig = "4.1.1"
kotlinx-coroutines = "1.8.0-RC"
ktor = "2.3.6"
composeIcons = "1.1.0"
kotlinx-serialization = "1.6.2"
kotlinx-datetime = "0.5.0"
koin = "3.5.0"
koin-compose-jb = "1.0.4"
koin-compose-version = "3.4.2"
sqlDelight = "2.0.0"
kermit = "2.0.0-RC4"
moko = "0.23.0"
androidx-preferences = "1.2.1"
dataStoreVersion = "1.1.0-alpha07"
kstore = "0.6.0"
java-appdirs = "1.2.2"

[libraries]
androidx-datastore-core-okio = { group = "androidx.datastore", name = "datastore-core-okio", version.ref = "dataStoreVersion" }
androidx-datastore-preferences-core = { group = "androidx.datastore", name = "datastore-preferences-core", version.ref = "dataStoreVersion" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3Exoplayer" }
androidx-preferences = { module = "androidx.preference:preference", version.ref = "androidx-preferences" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
#libres = { module = "io.github.skeptick.libres:libres-compose", version.ref = "libres" }
jlayer = { module = "com.github.umjammer:jlayer", version.ref = "jlayer" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
vlcj = { module = "uk.co.caprica:vlcj", version.ref = "vlcj" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-bottomSheetNavigator = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyager" }
voyager-tabNavigator = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-contentnegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
composeIcons-featherIcons = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose-mp = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose-jb" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-compose-version" }
sqlDelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-driver-js = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqlDelight" }
sqlDelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko" }
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko" }
moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko" }
moko-geo = { module = "dev.icerock.moko:geo-compose", version.ref = "moko" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
java-appdirs = { module = "net.harawata:appdirs", version.ref = "java-appdirs" }

[bundles]
ktor-common = [
    "ktor-core",
    "ktor-contentnegotiation",
    "ktor-serialization-json",
    "ktor-client-logging"
]

voyager-common = [
    "voyager-navigator",
    "voyager-transitions",
    "voyager-bottomSheetNavigator",
    "voyager-tabNavigator",
    "voyager-koin"
]

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
#libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko" }

